// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.7.2 (swiftlang-5.7.2.135.5 clang-1400.0.29.51)
// swift-module-flags: -target arm64-apple-ios10.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name HyBid
// swift-module-flags-ignorable: -enable-bare-slash-regex
import AVFoundation
import AdSupport
import AppTrackingTransparency
import CoreLocation
import Foundation
@_exported import HyBid
import Swift
import UIKit
import _Concurrency
import _StringProcessing
@_inheritsConvenienceInitializers @objc public class HyBidLogger : ObjectiveC.NSObject {
  public static var logLevel: HyBidLogLevel
  @objc(setLogLevel:) public static func setLogLevel(_ logLevel: HyBidLogLevel)
  @objc public static func errorLog(fromClass className: Swift.String, fromMethod: Swift.String, withMessage: Swift.String)
  @objc public static func warningLog(fromClass className: Swift.String, fromMethod: Swift.String, withMessage: Swift.String)
  @objc public static func infoLog(fromClass className: Swift.String, fromMethod: Swift.String, withMessage: Swift.String)
  @objc public static func debugLog(fromClass className: Swift.String, fromMethod: Swift.String, withMessage: Swift.String)
  @objc override dynamic public init()
  @objc deinit
}
@_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @objc public class HyBidSDKConfig : ObjectiveC.NSObject {
  @objc public static let sharedConfig: HyBidSDKConfig
  @objc public var test: Swift.Bool
  @objc public var targeting: HyBidTargetingModel?
  @objc public var appToken: Swift.String?
  @objc public var apiURL: Swift.String
  @objc public var openRtbApiURL: Swift.String
  @objc public var appID: Swift.String?
  @objc deinit
}
@_hasMissingDesignatedInitializers @objc @_Concurrency.MainActor(unsafe) public class HyBidMRAIDCloseCardView : UIKit.UIView {
  @objc @_Concurrency.MainActor(unsafe) public init(dictionary: Foundation.NSDictionary)
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func didMoveToSuperview()
  @objc deinit
}
extension HyBidMRAIDCloseCardView : HyBidContentInfoViewDelegate {
  @_Concurrency.MainActor(unsafe) @objc dynamic public func contentInfoViewWidthNeedsUpdate(_ width: Foundation.NSNumber!)
}
@objc public protocol HyBidReportingDelegate {
  @objc func onEvent(with event: HyBidReportingEvent)
}
@_inheritsConvenienceInitializers @objc public class HyBidReportingManager : ObjectiveC.NSObject {
  @objc public static let sharedInstance: HyBidReportingManager
  @objc public var events: [HyBidReportingEvent]
  @objc weak public var delegate: HyBidReportingDelegate?
  @objc public func reportEvent(for event: HyBidReportingEvent)
  @objc public func reportEvents(for events: [HyBidReportingEvent])
  @objc public func clearEvents()
  @objc override dynamic public init()
  @objc deinit
}
@_inheritsConvenienceInitializers @objc public class HyBidSettings : ObjectiveC.NSObject {
  @objc public static let sharedInstance: HyBidSettings
  @objc public var supportMultipleFidelities: Swift.Bool
  @objc public var advertisingId: Swift.String? {
    @objc get
  }
  @objc public var os: Swift.String {
    @objc get
  }
  @objc public var osVersion: Swift.String {
    @objc get
  }
  @objc public var deviceName: Swift.String {
    @objc get
  }
  @objc public var deviceWidth: Swift.String {
    @objc get
  }
  @objc public var deviceHeight: Swift.String {
    @objc get
  }
  @objc public var orientation: Swift.String {
    @objc get
  }
  @objc public var deviceSound: Swift.String {
    @objc get
  }
  @objc public var audioVolumePercentage: Foundation.NSNumber {
    @objc get
  }
  @objc public var locale: Swift.String? {
    @objc get
  }
  @objc public var sdkVersion: Swift.String?
  @objc public var appBundleID: Swift.String? {
    @objc get
  }
  @objc public var appVersion: Swift.String? {
    @objc get
  }
  @objc public var location: CoreLocation.CLLocation? {
    @objc get
  }
  @objc public var identifierForVendor: Swift.String? {
    @objc get
  }
  @objc public var ip: Swift.String? {
    @objc get
  }
  @objc public var appTrackingTransparency: Foundation.NSNumber? {
    @objc get
  }
  @objc override dynamic public init()
  @objc deinit
}
public typealias ReportingKey = Swift.String
@objc public class HyBidReportingEvent : ObjectiveC.NSObject {
  @objc public var properties: [ReportingKey : Any]
  @objc public var eventType: Swift.String
  @objc public init(with eventType: Swift.String, adFormat: Swift.String? = nil, properties: [ReportingKey : Any]? = nil)
  @objc public init(with eventType: Swift.String, errorMessage: Swift.String? = nil, properties: [ReportingKey : Any]? = nil)
  @objc public func toJSON() -> Swift.String
  @objc deinit
}
@objc public class HyBidSkipOffset : ObjectiveC.NSObject {
  @objc public var offset: Foundation.NSNumber?
  @objc public var isCustom: Swift.Bool
  @objc public var style: Foundation.NSNumber
  @objc public init(offset: Foundation.NSNumber?, isCustom: Swift.Bool)
  @objc public init(offset: Foundation.NSNumber?, isCustom: Swift.Bool, style: Foundation.NSNumber = 0)
  @objc public func configure(offset: Foundation.NSNumber?, isCustom: Swift.Bool, style: Foundation.NSNumber = 0)
  @objc deinit
}
@_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @objc public class HyBidSessionManager : ObjectiveC.NSObject {
  @objc public static let sharedInstance: HyBidSessionManager
  @objc public var impressionCounter: [Swift.String : Swift.Int]
  @objc public var sessionDuration: Swift.String
  @objc public func setStartSession()
  @objc public func updateSession(zoneID: Swift.String)
  @objc public func incrementImpressionCounter(zoneID: Swift.String)
  @objc public func sessionDuration(zoneID: Swift.String)
  @objc public func setAgeOfAppSinceCreated()
  @objc public func getAgeOfApp() -> Swift.String
  @objc deinit
}
@_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @objc public class HyBidConsentConfig : ObjectiveC.NSObject {
  @objc public static let sharedConfig: HyBidConsentConfig
  @objc public var coppa: Swift.Bool
  @objc deinit
}
@_inheritsConvenienceInitializers @objc public class HyBidTargetingModel : ObjectiveC.NSObject {
  @objc public var age: Foundation.NSNumber?
  @objc public var interests: [Swift.String]
  @objc public var gender: Swift.String?
  @objc override dynamic public init()
  @objc deinit
}
@_inheritsConvenienceInitializers @objc public class HyBidConstants : ObjectiveC.NSObject {
  @objc public static let HYBID_SDK_NAME: Swift.String
  @objc public static let HYBID_SDK_VERSION: Swift.String
  @objc public static let HYBID_OMSDK_VERSION: Swift.String
  @objc public static let HYBID_OMSDK_IDENTIFIER: Swift.String
  @objc override dynamic public init()
  @objc deinit
}
@objc public protocol HyBidInterstitialAdDelegate {
  @objc func interstitialDidLoad()
  @objc func interstitialDidFailWithError(_ error: Swift.Error!)
  @objc func interstitialDidTrackImpression()
  @objc func interstitialDidTrackClick()
  @objc func interstitialDidDismiss()
}
@_inheritsConvenienceInitializers @objc public class HyBidInterstitialAd : ObjectiveC.NSObject {
  @objc public var ad: HyBidAd?
  @objc public var isReady: Swift.Bool
  @objc public var isMediation: Swift.Bool
  @objc public var isAutoCacheOnLoad: Swift.Bool {
    @objc get
    @objc set
  }
  @objc(initWithDelegate:) convenience public init(delegate: HyBidInterstitialAdDelegate)
  @objc(initWithZoneID:andWithDelegate:) convenience public init(zoneID: Swift.String?, andWith delegate: HyBidInterstitialAdDelegate)
  @objc(initWithZoneID:withAppToken:andWithDelegate:) convenience public init(zoneID: Swift.String?, withAppToken appToken: Swift.String?, andWith delegate: HyBidInterstitialAdDelegate)
  @objc public func load()
  @objc(setSkipOffset:) public func setSkipOffset(_ seconds: Swift.Int)
  @objc(setVideoSkipOffset:) public func setVideoSkipOffset(_ seconds: Swift.Int)
  @objc(setHTMLSkipOffset:) public func setHTMLSkipOffset(_ seconds: Swift.Int)
  @objc(setCloseOnFinish:) public func setCloseOnFinish(_ closeOnFinish: Swift.Bool)
  @objc public func prepare()
  @objc(setMediationVendor:) public func setMediationVendor(with mediationVendor: Swift.String)
  @objc(prepareAdWithContent:) public func prepareAdWithContent(adContent: Swift.String)
  @objc(prepareAdWithAdReponse:) public func prepareAdWithAdReponse(adReponse: Swift.String)
  @objc(prepareVideoTagFrom:) public func prepareVideoTag(from url: Swift.String)
  @objc(prepareCustomMarkupFrom:) public func prepareCustomMarkupFrom(_ markup: Swift.String)
  @objc public func show()
  @objc(showFromViewController:) public func show(from viewController: UIKit.UIViewController)
  @objc override dynamic public init()
  @objc deinit
}
@objc public protocol HyBidRewardedAdDelegate {
  @objc func rewardedDidLoad()
  @objc func rewardedDidFailWithError(_ error: Swift.Error!)
  @objc func rewardedDidTrackImpression()
  @objc func rewardedDidTrackClick()
  @objc func rewardedDidDismiss()
  @objc func onReward()
}
@_inheritsConvenienceInitializers @objc public class HyBidRewardedAd : ObjectiveC.NSObject {
  @objc public var ad: HyBidAd?
  @objc public var isReady: Swift.Bool
  @objc public var isMediation: Swift.Bool
  @objc public var isAutoCacheOnLoad: Swift.Bool {
    @objc get
    @objc set
  }
  @objc(initWithDelegate:) convenience public init(delegate: HyBidRewardedAdDelegate)
  @objc(initWithZoneID:andWithDelegate:) convenience public init(zoneID: Swift.String?, andWith delegate: HyBidRewardedAdDelegate)
  @objc(initWithZoneID:withAppToken:andWithDelegate:) convenience public init(zoneID: Swift.String?, withAppToken appToken: Swift.String?, andWith delegate: HyBidRewardedAdDelegate)
  @objc public func load()
  @objc(setSkipOffset:) public func setSkipOffset(_ seconds: Swift.Int)
  @objc(setHTMLSkipOffset:) public func setHTMLSkipOffset(_ seconds: Swift.Int)
  @objc(setCloseOnFinish:) public func setCloseOnFinish(_ closeOnFinish: Swift.Bool)
  @objc public func prepare()
  @objc(setMediationVendor:) public func setMediationVendor(with mediationVendor: Swift.String)
  @objc(prepareCustomMarkupFrom:) public func prepareCustomMarkupFrom(_ markup: Swift.String)
  @objc(prepareAdWithContent:) public func prepareAdWithContent(adContent: Swift.String)
  @objc(prepareAdWithAdReponse:) public func prepareAdWithAdReponse(adReponse: Swift.String)
  @objc public func show()
  @objc(showFromViewController:) public func show(from viewController: UIKit.UIViewController)
  @objc override dynamic public init()
  @objc deinit
}
@_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @objc public class HyBidLocationConfig : ObjectiveC.NSObject {
  @objc public static let sharedConfig: HyBidLocationConfig
  @objc public var locationTrackingEnabled: Swift.Bool {
    @objc get
    @objc set(enabled)
  }
  @objc public var locationUpdatesEnabled: Swift.Bool {
    @objc get
    @objc set(enabled)
  }
  @objc deinit
}
@_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @objc public class HyBidViewbilityConfig : ObjectiveC.NSObject {
  @objc public static let sharedConfig: HyBidViewbilityConfig
  @objc public var impressionTrackerMethod: HyBidImpressionTrackerMethod
  @objc public var minVisibleTime: Swift.Int
  @objc public var minVisiblePercent: Swift.Double
  @objc deinit
}
@_inheritsConvenienceInitializers @objc public class HyBidReportingProperties : ObjectiveC.NSObject {
  @objc override dynamic public init()
  @objc deinit
}
@_inheritsConvenienceInitializers @objc(HyBidReportingCommon) public class Common : HyBidReportingProperties {
  @objc public static let AD_FORMAT: Swift.String
  @objc public static let AD_SIZE: Swift.String
  @objc public static let CATEGORY_ID: Swift.String
  @objc public static let CAMPAIGN_ID: Swift.String
  @objc public static let EVENT_TYPE: Swift.String
  @objc public static let CREATIVE_TYPE: Swift.String
  @objc public static let TIMESTAMP: Swift.String
  @objc public static let APPTOKEN: Swift.String
  @objc public static let ZONE_ID: Swift.String
  @objc public static let INTEGRATION_TYPE: Swift.String
  @objc public static let KEY_MEDIATION_VENDOR: Swift.String
  @objc public static let TIME_TO_LOAD: Swift.String
  @objc public static let AD_TYPE: Swift.String
  @objc public static let CACHE_TIME: Swift.String
  @objc public static let AD_REQUEST: Swift.String
  @objc public static let AD_RESPONSE: Swift.String
  @objc public static let RESPONSE_TIME: Swift.String
  @objc public static let RENDER_TIME: Swift.String
  @objc public static let AD_POSITION: Swift.String
  @objc public static let ERROR_CODE: Swift.String
  @objc public static let ERROR_MESSAGE: Swift.String
  @objc public static let CREATIVE: Swift.String
  @objc public static let HAS_END_CARD: Swift.String
  @objc public static let LAST_SESSION_TIMESTAMP: Swift.String
  @objc public static let IMPRESSION_SESSION_COUNT: Swift.String
  @objc public static let START_SESSION_TIMESTAMP: Swift.String
  @objc public static let SESSION_DURATION: Swift.String
  @objc public static let AGE_OF_APP: Swift.String
  @objc override dynamic public init()
  @objc deinit
}
@_inheritsConvenienceInitializers @objc(HyBidReportingEventType) public class EventType : HyBidReportingProperties {
  @objc public static let REQUEST: Swift.String
  @objc public static let IMPRESSION: Swift.String
  @objc public static let OMID_IMPRESSION: Swift.String
  @objc public static let CLICK: Swift.String
  @objc public static let ERROR: Swift.String
  @objc public static let INTERSTITIAL_CLOSED: Swift.String
  @objc public static let VIDEO_STARTED: Swift.String
  @objc public static let VIDEO_DISMISSED: Swift.String
  @objc public static let VIDEO_FINISHED: Swift.String
  @objc public static let VIDEO_MUTE: Swift.String
  @objc public static let VIDEO_UNMUTE: Swift.String
  @objc public static let AD_SESSION_INITIALIZED: Swift.String
  @objc public static let AD_SESSION_LOADED: Swift.String
  @objc public static let AD_SESSION_STARTED: Swift.String
  @objc public static let AD_SESSION_STOPPED: Swift.String
  @objc public static let VIDEO_AD_FIRST_QUARTILE: Swift.String
  @objc public static let VIDEO_AD_MIDPOINT: Swift.String
  @objc public static let VIDEO_AD_THIRD_QUARTILE: Swift.String
  @objc public static let VIDEO_AD_COMPLETE: Swift.String
  @objc public static let VIDEO_AD_PAUSE: Swift.String
  @objc public static let VIDEO_AD_RESUME: Swift.String
  @objc public static let VIDEO_AD_BUFFER_START: Swift.String
  @objc public static let VIDEO_AD_BUFFER_FINISH: Swift.String
  @objc public static let VIDEO_AD_VOLUME_CHANGE: Swift.String
  @objc public static let VIDEO_AD_SKIPPED: Swift.String
  @objc public static let VIDEO_AD_CLICKED: Swift.String
  @objc public static let LOAD: Swift.String
  @objc public static let LOAD_FAIL: Swift.String
  @objc public static let CACHE: Swift.String
  @objc public static let RESPONSE: Swift.String
  @objc public static let RENDER: Swift.String
  @objc public static let RENDER_ERROR: Swift.String
  @objc public static let COMPANION_VIEW: Swift.String
  @objc public static let REWARD: Swift.String
  @objc public static let SESSION_REPORT_INFO: Swift.String
  @objc override dynamic public init()
  @objc deinit
}
@_inheritsConvenienceInitializers @objc(HyBidReportingCreativeType) public class CreativeType : HyBidReportingProperties {
  @objc public static let STANDARD: Swift.String
  @objc public static let VIDEO: Swift.String
  @objc override dynamic public init()
  @objc deinit
}
@_inheritsConvenienceInitializers @objc(HyBidReportingAdFormat) public class AdFormat : HyBidReportingProperties {
  @objc public static let NATIVE: Swift.String
  @objc public static let BANNER: Swift.String
  @objc public static let FULLSCREEN: Swift.String
  @objc public static let REWARDED: Swift.String
  @objc override dynamic public init()
  @objc deinit
}
@_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @objc public class HyBidRenderingConfig : ObjectiveC.NSObject {
  @objc public static let sharedConfig: HyBidRenderingConfig
  @available(*, deprecated, message: "Please note this method will no longer be supported from HyBid SDK v3.0. While we do not recommend changes to this setting, you can reach out to your account managers for customisations.")
  @objc public var videoSkipOffset: HyBidSkipOffset
  @available(*, deprecated, message: "Please note this method will no longer be supported from HyBid SDK v3.0. While we do not recommend changes to this setting, you can reach out to your account managers for customisations.")
  @objc public var interstitialHtmlSkipOffset: HyBidSkipOffset
  @available(*, deprecated, message: "Please note this method will no longer be supported from HyBid SDK v3.0. While we do not recommend changes to this setting, you can reach out to your account managers for customisations.")
  @objc public var rewardedHtmlSkipOffset: HyBidSkipOffset
  @available(*, deprecated, message: "Please note this method will no longer be supported from HyBid SDK v3.0. While we do not recommend changes to this setting, you can reach out to your account managers for customisations.")
  @objc public var endCardCloseOffset: HyBidSkipOffset
  @available(*, deprecated, message: "Please note this method will no longer be supported from HyBid SDK v3.0. While we do not recommend changes to this setting, you can reach out to your account managers for customisations.")
  @objc public var showEndCard: Swift.Bool {
    @objc get
    @objc set
  }
  @available(*, deprecated, message: "Please note this method will no longer be supported from HyBid SDK v3.0. While we do not recommend changes to this setting, you can reach out to your account managers for customisations.")
  @objc public var interstitialActionBehaviour: HyBidInterstitialActionBehaviour
  @available(*, deprecated, message: "Please note this method will no longer be supported from HyBid SDK v3.0. While we do not recommend changes to this setting, you can reach out to your account managers for customisations.")
  @objc public var interstitialCloseOnFinish: Swift.Bool
  @available(*, deprecated, message: "Please note this method will no longer be supported from HyBid SDK v3.0. While we do not recommend changes to this setting, you can reach out to your account managers for customisations.")
  @objc public var rewardedCloseOnFinish: Swift.Bool
  @available(*, deprecated, message: "Please note this method will no longer be supported from HyBid SDK v3.0. While we do not recommend changes to this setting, you can reach out to your account managers for customisations.")
  @objc public var audioStatus: HyBidAudioStatus
  @available(*, deprecated, message: "Please note this method will no longer be supported from HyBid SDK v3.0. While we do not recommend changes to this setting, you can reach out to your account managers for customisations.")
  @objc public var mraidExpand: Swift.Bool
  @available(*, deprecated, message: "Please note this method will no longer be supported from HyBid SDK v3.0. While we do not recommend changes to this setting, you can reach out to your account managers for customisations.")
  @objc public var interstitialSKOverlay: Swift.Bool
  @available(*, deprecated, message: "Please note this method will no longer be supported from HyBid SDK v3.0. While we do not recommend changes to this setting, you can reach out to your account managers for customisations.")
  @objc public var rewardedSKOverlay: Swift.Bool
  @available(*, deprecated, message: "Please note this method will no longer be supported from HyBid SDK v3.0. While we do not recommend changes to this setting, you can reach out to your account managers for customisations.")
  @objc public var bannerSKOverlay: Swift.Bool {
    @objc get
  }
  @objc deinit
}
